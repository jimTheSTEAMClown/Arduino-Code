// Assign the pins used in this sketch
int oscilloscope_pin = 2;
String inputString = "";         // a String to hold incoming data
bool stringComplete = false;  // whether the string is complete
int freq = 3400;

void setup() {
  // initialize the pins used in this sketch
  pinMode(oscilloscope_pin, OUTPUT);
  // put your setup code here, to run once:
  Serial.begin(9600);
  // reserve 200 bytes for the inputString:
  Serial.print("Startup Frequency = ");
  Serial.println(freq);
  Serial.println("To Change, Enter A New Frequency > ");
  tone(oscilloscope_pin,freq);
}

/*
  SerialEvent occurs whenever a new data comes in the hardware serial RX. This
  routine is run between each time loop() runs, so using delay inside loop can
  delay response. Multiple bytes of data may be available.
*/
void serialEvent() {
  while (Serial.available()) {
    // get the new byte:
    char inChar = (char)Serial.read();
    // add it to the inputString:
    inputString += inChar;
    // if the incoming character is a newline, set a flag so the main loop can
    // do something about it:
    if (inChar == '\n') {
      stringComplete = true;
    }
  }
}
void loop() {
  // put your main code here, to run repeatedly:
if (stringComplete) {
    Serial.println(inputString);
    freq = inputString.toInt();
    //Serial.println(inputString);
    tone(oscilloscope_pin,freq); 
    // clear the string:
    inputString = "";
    stringComplete = false;
  }
}

// ============================================================================
// Source: Squeaky Hinge // www.squeakyhinge.com/arduino
// Hacker: Jim Burnham // Chief Engineer, Maker, Propmaster & Adrenologist 
// Design Name:			steamLabs_Servo_SqueakyHinge
// Description:		This is an example of a push button input
//					This code will detect a button push, and will change the 
//					value of buttonStatus every tome it tests buttonPin in 
//					the digitalRead function.  The status of buttonDetected is 
//					set in the test for buttonStatus = HIGH, and must be 
//					reset if you want it to change 
//					the buttonPin
// This example code is in the public domain.  
//
// Dependencies: 
//
// Revisions: 
// Revision 0.01 - Sketch// Created - 06/24/15
// Additional Comments: 
//
// ============================================================================
//
// ----------------------------------------------------------------------------
// define included libraries that will be used in the sketch
// ----------------------------------------------------------------------------

// ----------------------------------------------------------------------------
// the define variables that will be used in the sketch
// ----------------------------------------------------------------------------
// These are constants, and the sketch won't change these values while running. 
// Typically these are pin labels and pin assignments:
// These are ones I use as defaults in most of my sketches
const int arduinoBoardLED = 13;		// LED on pin 13 
const int buttonPin = 6;	// LED on pin 2 
int buttonStatus = LOW;		// variable for reading the status buttonPin on Pin
int buttonDetected = 0;		// variable for reading the status buttonPin on Pin

// ============================================================================
// The setup routine runs once when you load the sketch or press reset:
// This is where you define pin directions
void setup()
{
	Serial.begin(9600);           // Use Serial Monitor to debug
	// initialize the digital pin as an output.
	pinMode(arduinoBoardLED, OUTPUT);
	pinMode(buttonPin, INPUT);	
}

// ============================================================================
// the loop routine runs over and over again forever:
void loop()
{
	
	buttonStatus = digitalRead(buttonPin);
	if (buttonStatus == HIGH)
	{
		digitalWrite(arduinoBoardLED, HIGH);
    	Serial.println ("Detected PushButton signal");
    	buttonDetected = 1; // Set buttonDetected HIGH (1 is the same as HIGH)
		// This is where you would put code that you wanted to happen when 
		// buttonStatus is HIGH
		delay(1000);
	}
    else // buttonStatus == LOW
    {	
    	digitalWrite(arduinoBoardLED, LOW);
    	Serial.println ("Waiting to Detect pushButton signal");
    	// This is where you would put code that you wanted to happen when 
		// buttonStatus is lOW
	   	delay(10);
	}
	
	// this code will alwasy run while buttonDetected is = 1.  You will need 
	// to be reset buttonDetect to 0 to not run this while loop.  You will 
	// never drop out of this loop till you reset buttonDetect 
	while (buttonDetected == 1){
		// This is where you would put code that you wanted to happen when 
		// buttonDetected is 1 (same as HIGH)

		for (int i=0; i < 10; i++){
	    	Serial.print ("In buttonDetected While Loop. i = ");
		  	Serial.println (i);
	  		digitalWrite(arduinoBoardLED, HIGH);
	  		delay(100);
	  		digitalWrite(arduinoBoardLED, LOW);
	  		delay(100);      
	   } 
		// After you have done all you want when a button was detects, you 
		// would reset buttonDetect to drop out of the while 
		buttonDetected = 0;  // reset buttonDetect		
	}
}
